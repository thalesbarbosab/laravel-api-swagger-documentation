{
    "openapi": "3.0.0",
    "info": {
        "title": "API Laravel Swagger Documentation",
        "contact": {
            "email": "dev.tbarbosa.bento@gmail.com"
        },
        "version": "1.5.0"
    },
    "paths": {
        "/api/sanctum/token": {
            "post": {
                "tags": [
                    "Sanctum Authentication"
                ],
                "summary": "Get a autentication user token",
                "description": "This endpoints return a new token user authentication for use on protected endpoints",
                "operationId": "4aed2e67cb048a8c6ce647a3976e9b8c",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password",
                                    "device_name"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "example": "gabriel_nunes@example.org"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "#sdasd$ssdaAA@"
                                    },
                                    "device_name": {
                                        "type": "string",
                                        "example": "IOS"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Token generated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "plainTextToken": {
                                            "type": "string",
                                            "example": "2|MZEBxLy1zulPtND6brlf8GOPy57Q4DwYunlibXGj"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "421": {
                        "description": "Incorrect credentials",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The provided credentials are incorrect."
                                        },
                                        "errors": {
                                            "type": "string",
                                            "example": "..."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/user": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Create a new user",
                "description": "This endpoint creates a new user",
                "operationId": "287bc3ec931e652c54bb2ddb777040bc",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password",
                                    "name",
                                    "password_confirmation"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Gabriel Nunes"
                                    },
                                    "email": {
                                        "type": "string",
                                        "example": "gabriel_nunes@example.org"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "#sdasd$ssdaAA@"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "example": "#sdasd$ssdaAA@"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User created successfully!"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Incorrect fields",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The name has already been taken. (and 2 more errors)"
                                        },
                                        "errors": {
                                            "type": "string",
                                            "example": "..."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/user/me": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Get data about authenticated user",
                "description": "This endpoint returns all authenticated user data",
                "operationId": "23a655d8871ff4920d42e22aad9c27c0",
                "responses": {
                    "200": {
                        "description": "authenticated user data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "string",
                                            "example": "5"
                                        },
                                        "name": {
                                            "type": "string",
                                            "example": "Gabriel Nunes"
                                        },
                                        "email": {
                                            "type": "string",
                                            "example": "gabriel_nunes@example.org"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Incorrect fields",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The name has already been taken. (and 2 more errors)"
                                        },
                                        "errors": {
                                            "type": "string",
                                            "example": "..."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerToken": []
                    }
                ]
            }
        },
        "/api/user/change-email": {
            "patch": {
                "tags": [
                    "User"
                ],
                "summary": "Change user email",
                "description": "This endpoints change an user email",
                "operationId": "86bd15cac7a6596021166c8e656366df",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "required": [
                                    "email"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "example": "gabriel_robert@example.org"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User e-mail updated successfully!",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User e-mail updated successfully!"
                                        },
                                        "user": {
                                            "type": "string",
                                            "example": "..."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Incorrect fields",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The name has already been taken. (and 2 more errors)"
                                        },
                                        "errors": {
                                            "type": "string",
                                            "example": "..."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerToken": []
                    }
                ]
            }
        },
        "/api/user/logout": {
            "delete": {
                "tags": [
                    "User"
                ],
                "summary": "Revoke all user tokens",
                "description": "This endpoint provides a logout for user, revoking all actived user tokens.",
                "operationId": "2195f702f47b7fd672e8d116ff31853e",
                "responses": {
                    "200": {
                        "description": "All user tokens revoked",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "All user tokens were revoked !"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Incorrect fields",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The email field is required."
                                        },
                                        "errors": {
                                            "type": "string",
                                            "example": "..."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerToken": []
                    }
                ]
            }
        }
    },
    "components": {
        "securitySchemes": {
            "bearerToken": {
                "type": "http",
                "description": "Acess token obtido na autenticação",
                "name": "Authorization",
                "in": "header",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    }
}